// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RepairsManager.Dal.Context;

namespace RepairsManager.Dal.Migrations
{
    [DbContext(typeof(RepairsManagerContext))]
    [Migration("20190207154551_initDB")]
    partial class initDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RepairsManager.Dal.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<int>("PartyId");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("UnitId");

                    b.HasKey("Id");

                    b.HasIndex("PartyId");

                    b.HasIndex("UnitId");

                    b.ToTable("Material");
                });

            modelBuilder.Entity("RepairsManager.Dal.Models.MaterialParty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Number")
                        .HasMaxLength(16);

                    b.Property<DateTime?>("Receipt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique()
                        .HasName("UQ__Material__78A1A19D6E48A9E8")
                        .HasFilter("[Number] IS NOT NULL");

                    b.ToTable("Material_party");
                });

            modelBuilder.Entity("RepairsManager.Dal.Models.MaterialUnits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("UQ__Material__737584F6720D0D0C");

                    b.ToTable("Material_units");
                });

            modelBuilder.Entity("RepairsManager.Dal.Models.Repair", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("RepairDate")
                        .HasColumnType("datetime");

                    b.Property<int>("VehicleId");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Repair");
                });

            modelBuilder.Entity("RepairsManager.Dal.Models.RepairPart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<int>("MaterialId");

                    b.Property<int>("RepairId");

                    b.Property<string>("Work")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("('Заменено')")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("RepairId");

                    b.ToTable("Repair_part");
                });

            modelBuilder.Entity("RepairsManager.Dal.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RegNumber")
                        .IsRequired()
                        .HasColumnName("Reg_number")
                        .HasMaxLength(16);

                    b.Property<int>("VehicleModelId");

                    b.HasKey("Id");

                    b.HasIndex("RegNumber")
                        .IsUnique()
                        .HasName("UQ__Vehicle__18B201F699F7FD79");

                    b.HasIndex("VehicleModelId");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("RepairsManager.Dal.Models.VehicleMark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("UQ__Vehicle___737584F68AA5465E");

                    b.ToTable("Vehicle_mark");
                });

            modelBuilder.Entity("RepairsManager.Dal.Models.VehicleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<int>("VehicleMarkId");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("UQ__Vehicle___737584F61CFC43C3");

                    b.HasIndex("VehicleMarkId");

                    b.ToTable("Vehicle_model");
                });

            modelBuilder.Entity("RepairsManager.Dal.Models.Material", b =>
                {
                    b.HasOne("RepairsManager.Dal.Models.MaterialParty", "Party")
                        .WithMany("Material")
                        .HasForeignKey("PartyId")
                        .HasConstraintName("Material_fk0");

                    b.HasOne("RepairsManager.Dal.Models.MaterialUnits", "Unit")
                        .WithMany("Material")
                        .HasForeignKey("UnitId")
                        .HasConstraintName("Material_fk1");
                });

            modelBuilder.Entity("RepairsManager.Dal.Models.Repair", b =>
                {
                    b.HasOne("RepairsManager.Dal.Models.Vehicle", "Vehicle")
                        .WithMany("Repair")
                        .HasForeignKey("VehicleId")
                        .HasConstraintName("Repair_fk0");
                });

            modelBuilder.Entity("RepairsManager.Dal.Models.RepairPart", b =>
                {
                    b.HasOne("RepairsManager.Dal.Models.Material", "Material")
                        .WithMany("RepairPart")
                        .HasForeignKey("MaterialId")
                        .HasConstraintName("Repair_part_fk1");

                    b.HasOne("RepairsManager.Dal.Models.Repair", "Repair")
                        .WithMany("RepairPart")
                        .HasForeignKey("RepairId")
                        .HasConstraintName("Repair_part_fk0");
                });

            modelBuilder.Entity("RepairsManager.Dal.Models.Vehicle", b =>
                {
                    b.HasOne("RepairsManager.Dal.Models.VehicleModel", "VehicleModel")
                        .WithMany("Vehicle")
                        .HasForeignKey("VehicleModelId")
                        .HasConstraintName("Vehicle_fk0");
                });

            modelBuilder.Entity("RepairsManager.Dal.Models.VehicleModel", b =>
                {
                    b.HasOne("RepairsManager.Dal.Models.VehicleMark", "VehicleMark")
                        .WithMany("VehicleModel")
                        .HasForeignKey("VehicleMarkId")
                        .HasConstraintName("Vehicle_model_fk0");
                });
#pragma warning restore 612, 618
        }
    }
}
